<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="asap.be.repository.ProductMapper">

  <sql id="productColumns">
    a.pId, a.pName, a.price, a.pCode, b.sId, b.cnt, b.receive_in, c.wId, c.wName, c.wLoc
  </sql>

  <insert id="save" useGeneratedKeys="true">
    <!-- product_table에 데이터 추가 -->
    INSERT INTO product_table (pName, price, pCode)
    VALUES (#{p.pName}, #{p.price}, #{p.pCode})
  </insert>

  <delete id="delete">
    DELETE FROM product WHERE pId = #{pId}
  </delete>

  <update id="name">
    UPDATE product_table SET pName = #{updateParam.pName} WHERE pId = #{pId}
  </update>

  <update id="price">
    UPDATE product_table SET pName = #{updateParam.price} WHERE pId = #{pId}
  </update>

  <update id="barcode">
    UPDATE product_table SET pName = #{updateParam.barcode} WHERE pId = #{pId}
  </update>

  <select id="findById" resultType="asap.be.dto.EverythingDto">
    SELECT <include refid="productColumns" />
    FROM product_table AS a JOIN stock_table AS b ON a.pId = b.sId
    JOIN warehouse_table AS c ON b.sId = c.wId
    WHERE a.pName = #{pId}
  </select>

  <select id="findByName" resultType="asap.be.dto.EverythingDto">
    SELECT <include refid="productColumns" />
    FROM product_table AS a JOIN stock_table AS b ON a.pId = b.sId
    JOIN warehouse_table AS c ON b.sId = c.wId
    WHERE a.pName = #{pName}
  </select>

  <select id="findByAll" resultType="asap.be.dto.EverythingDto">
    SELECT <include refid="productColumns" />
    FROM product_table AS a JOIN stock_table AS b ON a.pId = b.sId
    JOIN warehouse_table AS c ON b.sId = c.wId
  </select>

</mapper>


<!-- 예시
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into item (item_name, price, quantity)
        values (#{itemName}, #{price}, #{quantity})
    </insert>

    <update id="update">
        update item
        set item_name=#{updateParam.itemName},
            price=#{updateParam.price},
            quantity=#{updateParam.quantity}
        where id = #{id}
    </update>

    <select id="findById" resultType="Item">
        select id, item_name, price, quantity
        from item
        where id = #{id}
    </select>

    <select id="findAll" resultType="Item">
        select id, item_name, price, quantity
        from item
        <where>
            <if test="itemName != null and itemName != ''">
                and item_name like concat('%', #{itemName}, '%')
            </if>
            <if test="maxPrice != null">
                and price &lt;= #{maxPrice}
            </if>
        </where>
    </select>
    -->
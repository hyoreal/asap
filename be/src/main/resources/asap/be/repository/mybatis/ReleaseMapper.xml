<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="asap.be.repository.mybatis.ReleaseMapper">

    <select id="cnt" resultType="Integer">
            SELECT cnt
            FROM Stock_table
            WHERE pId = #{pId};
    </select>

    <insert id="sSave" useGeneratedKeys="true" parameterType="EverythingDto">

        INSERT INTO Stock_table (wId,pId, cnt, receive_in, pInsert)
        VALUES (#{wId}, #{pId}, #{cnt} + #{pinsert}, now(), #{pinsert});

        <selectKey resultType="Long" keyProperty="sId" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="release" parameterType="ReleaseStockDto">

            UPDATE Stock_table
            SET cnt = cnt - #{s.quantity}
            WHERE pId = #{s.pId};

            INSERT INTO Release_table (sId, quantity, total, release_at)
            VALUES (#{s.pId}, #{s.quantity},
            (SELECT price * #{s.quantity} FROM Product_table WHERE pId = #{s.pId}), now());

    </update>

    <update id="update">
        UPDATE Stock_table
        SET cnt = cnt + #{s.quantity}, receive_in = now()
        WHERE pId = #{s.pId};
    </update>

    <select id="findAll" resultType="Release">
        SELECT * FROM Release_table ORDER BY release_at DESC
    </select>

    <select id="findReleaseById" resultType="Release">
        SELECT * FROM Release_table WHERE sId = #{sId} ORDER BY release_at DESC
    </select>

    <select id="findStockByPId" resultType="Stock">
        SELECT * FROM Stock_table WHERE pId = #{pId}
    </select>

    <select id="totalByDates" resultType="MoneyDto">
        SELECT release_at AS releaseat, SUM(total) AS money
        FROM Release_table
        WHERE release_at BETWEEN #{start_date} AND #{end_date}
        GROUP BY release_at
        ORDER BY release_at
    </select>

    <resultMap id="yearStatusResult" type="YearStatusDto">
        <result property="month" column="month"/>
        <result property="allQuantity" column="total_cnt"/>
        <result property="allReleaseAt" column="total_quantity"/>
        <result property="allInsert" column="total_pInsert"/>
    </resultMap>
    <select id="getMonthlyStockSummary" resultMap="yearStatusResult">
        SELECT
            m.month,
            COALESCE(s.total_cnt, 0) AS total_cnt,
            COALESCE(s.total_pInsert, 0) AS total_pInsert,
            COALESCE(s.total_quantity, 0) AS total_quantity
        FROM
            (   SELECT 1 AS month
                UNION SELECT 2
                UNION SELECT 3
                UNION SELECT 4
                UNION SELECT 5
                UNION SELECT 6
                UNION SELECT 7
                UNION SELECT 8
                UNION SELECT 9
                UNION SELECT 10
                UNION SELECT 11
                UNION SELECT 12
            ) AS m
                LEFT JOIN (
                SELECT
                    MONTH(s.receive_in) AS month,
                    SUM(s.cnt) AS total_cnt,
                    SUM(s.pInsert) AS total_pInsert,
                    SUM(r.quantity) AS total_quantity
                FROM
                    Stock_table s
                    LEFT JOIN Release_table r ON s.sId = r.sId
                WHERE
                    YEAR(s.receive_in) = #{year} OR YEAR(r.release_at) = #{year}
                GROUP BY
                    MONTH(s.receive_in)
            ) AS s ON m.month = s.month
        ORDER BY
            m.month
    </select>

</mapper>
